---
globs: *.mdc
---
# Cursor Rules guidelines

Guidelines for cursor rules in this repository.

## Related Rules

This rule works in conjunction with:

- **[master.mdc](mdc:.cursor/rules/master.mdc)**: Central reference for all rules
- **[Naming Guidelines](mdc:.cursor/rules/guidelines/naming.mdc)**: File naming conventions
- **[Markdown Guidelines](mdc:.cursor/rules/guidelines/markdown.mdc)**: Content formatting standards

## Table of Contents

- [Cursor Rules guidelines](#cursor-rules-guidelines)
  - [Related Rules](#related-rules)
  - [Table of Contents](#table-of-contents)
  - [Rules Categories](#rules-categories)
    - [Agents](#agents)
    - [Commands](#commands)
    - [Guidelines](#guidelines)
    - [Templates](#templates)
    - [Special Cases](#special-cases)
  - [Directory Structure](#directory-structure)
  - [Naming Convention](#naming-convention)
  - [Rule File Structure](#rule-file-structure)
    - [Frontmatter Requirements](#frontmatter-requirements)
    - [Rule Template](#rule-template)
  - [Updating References](#updating-references)
  - [Quality Checklist](#quality-checklist)

## Rules Categories

Cursor rules can be categorized based on its purpose:

### Agents

**Purpose**: Rules for AI agent behavior and management
**Examples**: Summary Commit, Cursor Rules Guidelines, Rule Usage
**When to use**: For rules that control how the AI agent should behave

### Commands

**Purpose**: Step-by-step commands for the AI agent to perform specific tasks
**Examples**: Implementation workflows, task-specific guidance, process documentation
**When to use**: For rules that describe how to accomplish specific tasks or follow processes

### Guidelines

**Purpose**: Opinionated best practices on specific topics
**Examples**: Commit Message, Naming Conventions, Formatting Standards, Coding Style, Best Practices
**When to use**: For rules that establish standards, conventions, or best practices

### Templates

**Purpose**: Templates for the AI agent to use
**Examples**: Rule templates, Workflow templates, etc.
**When to use**: For rules that provide templates for the AI agent to use

### Special Cases

The `master.mdc` is a special case that does not belong to any category.
It is placed directly under the `.cursor/rules` folder.

## Directory Structure

Rule files should be placed in the appropriate folder based on its category:

```sh
.cursor/rules/
├── master.mdc                              # Central reference (special file)
├── agents/                                 # Rules for AI agent behavior and management.
│   ├── summary_commit.mdc                  # Add a "Commit Message" section in agent response
│   ├── cursor_rules.mdc                    # Rule for managing cursor rules
│   └── rule_usage.mdc                      # Add a "Rules Applied" section in agent response
├── commands/                              # Step-by-step commands for AI agents to follow
│   ├── convert_test_to_story.mdc
│   ├── generate_changesets.mdc
│   ├── generate_commit_message.mdc
│   └── planning.mdc
└── guidelines/                             # Opinionated best practices
    ├── commit_message.mdc
    ├── markdown.mdc
    ├── naming.mdc
    ├── project_structure.mdc
    └── repository_structure.mdc
```

## Naming Convention

- **Make names descriptive** of the rule's purpose
- **Place in appropriate category subfolder** (see categories above)

❌ **Bad names:**

- `ReactComponent.mdc` (PascalCase)
- `react-component.mdc` (kebab-case)
- `react_component.md` (wrong extension)
- `component.mdc` (too generic)

✅ **Good names:**

- `react_component.mdc`
- `commit_message.mdc`
- `storybook_story.mdc`
- `tailwindcss.mdc`

## Rule File Structure

### Frontmatter Requirements

The `globs` field is optional and is used to specify the file patterns where this rule applies (e.g., `src/**/*.tsx`)

- **Important**: Complex glob patterns are not supported
- **Example**: `*.{ts,tsx}` does not work - use `*.ts,*.tsx` instead
- **Supported**: Simple patterns like `*.ts`, `src/**/*.tsx`, `packages/*/src/**/*.ts`
- **Not Supported**: Brace expansion patterns like `*.{ts,tsx}`, `*.{js,jsx,ts,tsx}`

### Rule Template

The cursor rules should follow this template:

```md
# Rule Title

Brief explanation of the rule's purpose and when to use it.

## Related Rules

This rule works in conjunction with:

- **[Related Rule Name](mdc:.cursor/rules/category/rule_name.mdc)**: Brief explanation of how this rule relates
- **[Another Rule](mdc:.cursor/rules/category/another_rule.mdc)**: Brief explanation of integration

## Quick Reference

[Include a summary table or bullet points for quick lookup]

## Table of Contents

- [Section 1](#section-1)
- [Section 2](#section-2)

## Section 1

Detailed explanation with step-by-step instructions.

### ❌ Bad Examples to avoid

[Include examples of what to avoid]

### ✅ Good Examples to follow

[Include positive examples]

## Section 2

Additional content organized in logical sections.

## Quality Checklist

[Include verification steps to ensure compliance]
```

In the rule template, the following sections can be skipped:

- **Related Rules**: When the rule is not related to any other rule
- **Quick Reference**: The rule is short and does not need a quick reference
- **Table of Contents**: The rule is short and does not have a table of contents
- **Quality Checklist**: The rule is not complex and does not need a quality checklist

## Updating References

After creating a new rule, update `.cursor/rules/master.mdc` with the new rule.

## Quality Checklist

Before finalizing a new rule, verify:

- [ ] Frontmatter is complete and accurate.
- [ ] File is in the correct category subfolder.
- [ ] Filename follows `snake_case` convention.
- [ ] Content follows the structure template.
- [ ] Format follows markdown guidelines.
- [ ] Examples are clear and practical.
- [ ] Integration section references related rules.
- [ ] Rule is added to `master.mdc`.
- [ ] The rule is easy to follow by AI agents.
