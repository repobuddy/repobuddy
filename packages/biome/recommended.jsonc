{
	"$schema": "https://biomejs.dev/schemas/2.0.6/schema.json",
	"formatter": {
		"enabled": true,
		"indentStyle": "tab",
		"lineEnding": "lf",
		"lineWidth": 120
	},
	"javascript": {
		"formatter": {
			"quoteStyle": "single",
			"semicolons": "asNeeded"
		}
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"complexity": {
				// There are advantages of using other constructs,
				// but they should not be reasons to avoid `.forEach()`.
				"noForEach": "off",
				// This conflicts with TypeScript when accessing index types.
				"useLiteralKeys": "off"
			},
			"correctness": {
				"noUnusedVariables": "error",
				"useExhaustiveDependencies": "off"
			},
			"style": {
				"noCommaOperator": "off",
				"noNonNullAssertion": "off",
				// unless you uses them as out params, which you shouldn't,
				// it is ok to assign the parameters.
				// With TypeScript, you will need to assign to a new variable if the type changes,
				// so you will not assign the parameter and run into this anyway.
				"noParameterAssign": "off",
				// using template has performance impact, compare to string concatenation.
				// for more complex cases, using template does produce more readable code.
				// But for simple case like `count + ' counts'` ->	`${count} counts`,
				// it is a subjective style choice.
				"useTemplate": "off"
			},
			"suspicious": {
				"noAssignInExpressions": "off",
				// The `noConsoleLog` setting is `biome` matches the requirement or repobuddy.
				// Thus it is enabled by default.
				"noConsoleLog": "error",
				// Type operates at a higher dimension than value.
				// This means there are many cases you will need to use `any` to bypass the type inferred in the value.
				"noExplicitAny": "off"
			}
		}
	},
	"organizeImports": {
		// This is disabled until this issue is resolved:
		// https://github.com/biomejs/biome-vscode/issues/356
		"enabled": false
	},
	"overrides": [
		{
			"include": [
				"frontmatter.json",
				".frontmatter/config/*.json",
				".vscode/*.json",
				"tsconfig*.json"
			],
			"json": {
				"parser": {
					"allowComments": true,
					"allowTrailingCommas": true
				}
			}
		},
		{
			"include": ["package.json"],
			"formatter": {
				// The line width is set to a low value so that the format works well with other tools such as `sort-package-json`
				"lineWidth": 20
			}
		}
	]
}
